// swift-tools-version: 6.1
// The swift-tools-version declares the minimum version of Swift required to build this package.

import Foundation
import PackageDescription

// Do not edit the checksums manually! They are automatically updated by the luau.yml workflow.
// <AUTO-GENERATED-BEGIN>
let version = "0.2.0+0.690"
let luauAstChecksum = "40f8bc463ca52ce9bc77409e496166bce697adbd93006661f110ab249f962b6e"
let luauVMChecksum = "ba1e6f48cba4521e28b17d184e5154934e2dd52f860572b96f6533d02a338e60"
let luauCompilerChecksum = "d37e7997b07e7704088854a20f095cf8468a28a3446758e6eafd25a14076e184"
// <AUTO-GENERATED-END>

let localLuaAvailable = FileManager.default.fileExists(atPath: ".build/luau_build")
let localLibraries: [Target] = [
    .binaryTarget(
        name: "LuauAst",
        path: ".build/luau_build/LuauAst.xcframework"
    ),
    .binaryTarget(
        name: "LuauVM",
        path: ".build/luau_build/LuauVM.xcframework"
    ),
    .binaryTarget(
        name: "LuauCompiler",
        path: ".build/luau_build/LuauCompiler.xcframework"
    ),
]
let remoteBaseURL = "https://github.com/RadiusDay/SwiftLuau/releases/download/\(version)"
let remoteLibraries: [Target] = [
    .binaryTarget(
        name: "LuauAst",
        url: "\(remoteBaseURL)/LuauAst.xcframework.zip",
        checksum: luauAstChecksum
    ),
    .binaryTarget(
        name: "LuauVM",
        url: "\(remoteBaseURL)/LuauVM.xcframework.zip",
        checksum: luauVMChecksum
    ),
    .binaryTarget(
        name: "LuauCompiler",
        url: "\(remoteBaseURL)/LuauCompiler.xcframework.zip",
        checksum: luauCompilerChecksum
    ),
]

let package = Package(
    name: "SwiftLuau",
    platforms: [
        .macOS(.v15)
    ],
    products: [
        .library(
            name: "SwiftLuau",
            targets: ["SwiftLuau"]
        ),
        .executable(
            name: "Example",
            targets: ["Example"]
        ),
    ],
    targets: (localLuaAvailable ? localLibraries : remoteLibraries) + [
        .target(
            name: "SwiftLuauBindings",
            dependencies: ["LuauVM", "LuauAst", "LuauCompiler"],
        ),
        .target(
            name: "SwiftLuau",
            dependencies: ["SwiftLuauBindings"],
            publicHeadersPath: "include",
            linkerSettings: [
                .linkedLibrary("c++")
            ]
        ),
        .executableTarget(
            name: "Example",
            dependencies: ["SwiftLuau"],
            resources: [
                .copy("Resources/luaApp.luau")
            ]
        ),
    ]
)
