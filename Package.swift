// swift-tools-version: 6.1
// The swift-tools-version declares the minimum version of Swift required to build this package.

import Foundation
import PackageDescription

// Do not edit the checksums manually! They are automatically updated by the luau.yml workflow.
// <AUTO-GENERATED-BEGIN>
let version = "0.2.1+0.691"
let luauAstChecksum = "7fae614f29df2c2d6befeb3c3dfe4d4c3d6940ca4b0605d1b648c8bb1750fb4b"
let luauVMChecksum = "043c3dfeac42b2981c1e2b2fe9a170cf7b7790356a250eb68e457f7bfcd521ec"
let luauCompilerChecksum = "b9b7fa94aed8565ce3c3dac4d6f675885137c993e7fdd221fc17feb2176df9db"
// <AUTO-GENERATED-END>

let localLuaAvailable = FileManager.default.fileExists(atPath: ".build/luau_build")
let localLibraries: [Target] = [
    .binaryTarget(
        name: "LuauAst",
        path: ".build/luau_build/LuauAst.xcframework"
    ),
    .binaryTarget(
        name: "LuauVM",
        path: ".build/luau_build/LuauVM.xcframework"
    ),
    .binaryTarget(
        name: "LuauCompiler",
        path: ".build/luau_build/LuauCompiler.xcframework"
    ),
]
let remoteBaseURL = "https://github.com/RadiusDay/SwiftLuau/releases/download/\(version)"
let remoteLibraries: [Target] = [
    .binaryTarget(
        name: "LuauAst",
        url: "\(remoteBaseURL)/LuauAst.xcframework.zip",
        checksum: luauAstChecksum
    ),
    .binaryTarget(
        name: "LuauVM",
        url: "\(remoteBaseURL)/LuauVM.xcframework.zip",
        checksum: luauVMChecksum
    ),
    .binaryTarget(
        name: "LuauCompiler",
        url: "\(remoteBaseURL)/LuauCompiler.xcframework.zip",
        checksum: luauCompilerChecksum
    ),
]

let package = Package(
    name: "SwiftLuau",
    platforms: [
        .macOS(.v15)
    ],
    products: [
        .library(
            name: "SwiftLuau",
            targets: ["SwiftLuau"]
        ),
        .executable(
            name: "Example",
            targets: ["Example"]
        ),
    ],
    targets: (localLuaAvailable ? localLibraries : remoteLibraries) + [
        .target(
            name: "SwiftLuauBindings",
            dependencies: ["LuauVM", "LuauAst", "LuauCompiler"],
        ),
        .target(
            name: "SwiftLuau",
            dependencies: ["SwiftLuauBindings"],
            publicHeadersPath: "include",
            linkerSettings: [
                .linkedLibrary("c++")
            ]
        ),
        .executableTarget(
            name: "Example",
            dependencies: ["SwiftLuau"],
            resources: [
                .copy("Resources/luaApp.luau")
            ]
        ),
    ]
)
